{"version":3,"sources":["components/Continue.js","pages/SelectDevice.js","pages/SelectCustomer.js","components/MenuBar.js","pages/Home.js","pages/Repair.js","components/ButtonHeader.js","pages/Repairs.js","pages/SelectPart.js","App.js","serviceWorker.js","index.js"],"names":["Continue","backLink","backText","nextLink","nextText","allowNext","onNext","style","marginTop","display","justifyContent","to","className","onClick","SelectDevice","useState","manufacturer","model","id","device","setDevice","useEffect","console","log","filteredDevices","Object","values","deviceList","filter","myDevice","sort","map","aDevice","data-model","toLowerCase","split","join","key","value","htmlFor","onChange","e","target","disabled","hidden","find","SelectCustomer","customerId","setCustomerId","name","email","newCustomer","setNewCustomer","storeCustomers","storeCustomer","type","placeholder","match","MenuBar","Fragment","height","role","aria-label","flexGrow","textAlign","Home","Repair","repairStatus","setRepairStatus","cost","parts","setParts","costOfLabour","setCostOfLabour","partsTable","part","aPart","parseInt","params","min","reduce","total","parseFloat","toFixed","ButtonHeader","title","buttonText","buttonLink","marginBottom","float","Repairs","unsortedRepairs","repairs","sortedRepairs","sortedRepairsTable","sortedRepair","status","SelectPart","setManufacturer","modelId","setModelId","partId","setPartId","filteredDeviceParts","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d7390f4b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Continue({\n  backLink,\n  backText,\n  nextLink,\n  nextText,\n  allowNext,\n  onNext,\n}) {\n  return (\n    <div\n      style={{\n        marginTop: \"8rem\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Link to={backLink} className=\"button\">\n        {backText}\n      </Link>\n      <Link\n        to={nextLink}\n        onClick={onNext}\n        className={`button button-primary ${\n          allowNext ? \"\" : \"button-disabled\"\n        }`}\n      >\n        {nextText}\n      </Link>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport deviceList from \"../deviceList.json\";\nimport Continue from \"../components/Continue\";\n\nexport default function SelectDevice() {\n  const [device, setDevice] = useState({\n    manufacturer: \"\",\n    model: \"\",\n    id: \"\",\n  });\n\n  useEffect(() => {\n    console.log(device);\n  }, [device]);\n\n  let filteredDevices = Object.values(deviceList)\n    .filter((myDevice) => myDevice.manufacturer === device.manufacturer)\n    .sort()\n    .map((aDevice) => (\n      <option\n        data-model={aDevice.model.toLowerCase().split(\" \").join(\"-\")}\n        key={aDevice.id}\n        value={aDevice.id}\n      >\n        {aDevice.model}\n      </option>\n    ));\n\n  return (\n    <div className=\"container\">\n      <h4>Select a device</h4>\n\n      <div className=\"row\">\n        <div className=\"six columns\">\n          <label htmlFor=\"manufacturer\">Manufacturer</label>\n          <select\n            className=\"u-full-width\"\n            id=\"manufacturer\"\n            onChange={(e) => {\n              setDevice({ manufacturer: e.target.value, model: \"\", id: \"\" });\n            }}\n            value={device.manufacturer}\n          >\n            <option value=\"\" disabled hidden>\n              Choose a manufacturer\n            </option>\n            <option value=\"apple\">Apple</option>\n            <option value=\"samsung\">Samsung</option>\n            <option value=\"lg\">LG</option>\n            <option value=\"motorola\">Motorola</option>\n            <option value=\"oneplus\">OnePlus</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"six columns\">\n          <label htmlFor=\"model\">Model</label>\n          <select\n            className=\"u-full-width\"\n            id=\"model\"\n            value={device.id}\n            {...(device.manufacturer === \"\" && { disabled: true })}\n            onChange={(e) => {\n              setDevice({\n                ...device,\n                id: e.target.value,\n                model: Object.values(deviceList).find(\n                  (aDevice) => aDevice.id === e.target.value\n                ).model,\n              });\n            }}\n          >\n            <option value=\"\" disabled hidden>\n              Choose a model\n            </option>\n            {filteredDevices}\n          </select>\n        </div>\n      </div>\n\n      <Continue\n        nextLink={`/repair/${device.id}`}\n        nextText=\"Continue\"\n        backText=\"back\"\n        backLink=\"/newrepair/customer\"\n        allowNext={device.id ? true : false}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Continue from \"../components/Continue\";\nimport storeCustomers from \"../storeCustomers.json\";\n\nexport default function SelectCustomer() {\n  const [customerId, setCustomerId] = useState(\"\");\n\n  const [newCustomer, setNewCustomer] = useState({ name: \"\", email: \"\" });\n\n  useEffect(() => {\n    console.log(\"Customer ID: \" + (customerId ? customerId : \"none selected\"));\n  }, [customerId]);\n\n  useEffect(() => {\n    console.log(newCustomer);\n  }, [newCustomer]);\n\n  let emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"six columns\">\n          <h4>Select existing customer</h4>\n          <select\n            className=\"u-full-width\"\n            id=\"storeCustomer\"\n            onChange={(e) => {\n              setCustomerId(e.target.value);\n              if (newCustomer.name || newCustomer.email)\n                setNewCustomer({ name: \"\", email: \"\" });\n            }}\n            value={customerId}\n          >\n            <option value=\"\">---</option>\n            {Object.values(storeCustomers).map((storeCustomer) => (\n              <option value={storeCustomer.id} key={storeCustomer.id}>\n                {storeCustomer.name}\n              </option>\n            ))}\n          </select>\n          {/* <p>{storeCustomers[customerId]}</p> */}\n        </div>\n      </div>\n      <hr></hr>\n      <div className=\"row\">\n        <div className=\"six columns\">\n          <h4>Create new customer</h4>\n          <label htmlFor=\"newCustomerName\">Name</label>\n          <input\n            type=\"text\"\n            className=\"u-full-width\"\n            id=\"newCustomerName\"\n            placeholder=\"Joe Smith\"\n            {...(customerId && {\n              disabled: true,\n            })}\n            onChange={(e) => {\n              setNewCustomer({ ...newCustomer, name: e.target.value });\n            }}\n            value={newCustomer.name}\n          ></input>\n          <label htmlFor=\"newCustomerEmail\">Email</label>\n          <input\n            {...(customerId && {\n              disabled: true,\n            })}\n            type=\"email\"\n            className=\"u-full-width\"\n            id=\"newCustomerEmail\"\n            placeholder=\"joe.smith@example.com\"\n            onChange={(e) => {\n              setNewCustomer({ ...newCustomer, email: e.target.value });\n            }}\n            value={newCustomer.email}\n          ></input>\n        </div>\n      </div>\n\n      <Continue\n        nextLink={`/newrepair/device`}\n        nextText=\"Continue\"\n        backText=\"Cancel\"\n        backLink=\"/\"\n        allowNext={\n          customerId ||\n          (newCustomer.name && newCustomer.email.match(emailRegex))\n        }\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function MenuBar() {\n  return (\n    <React.Fragment>\n      <div style={{ height: \"5rem\" }}></div>\n      <nav>\n        <div className=\"container\" style={{ display: \"flex\" }}>\n          <div id=\"app-logo\">\n            <Link to=\"/\">\n              <span role=\"img\" aria-label=\"image of a parrot\">\n                🦜\n              </span>\n              REPARRiT\n            </Link>\n          </div>\n\n          <div className=\"nav-menu nav-menu-desktop\">\n            <Link to=\"/repairs\">Repairs</Link>\n            <Link to=\"/customers\">Customers</Link>\n            <Link to=\"/parts\">Parts</Link>\n            <Link to=\"/suppliers\">Suppliers</Link>\n          </div>\n\n          <div\n            className=\"nav-menu-desktop\"\n            style={{ flexGrow: 5, textAlign: \"right\" }}\n          >\n            <Link to=\"/logout\">Log out</Link>\n          </div>\n\n          <div\n            className=\"nav-menu-mobile\"\n            style={{ flexGrow: 5, textAlign: \"right\" }}\n          >\n            <Link>Menu</Link>\n          </div>\n        </div>\n      </nav>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MenuBar from \"../components/MenuBar\";\n\nexport default function Home() {\n  return (\n    <React.Fragment>\n      <MenuBar />\n      <div className=\"container\">\n        <h4>Dashboard</h4>\n        <Link to=\"/newrepair/customer\" className=\"button button-primary\">\n          New repair\n        </Link>\n        <br />\n        <Link to=\"/newrepair/customer\" className=\"button button-primary\">\n          New part\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MenuBar from \"../components/MenuBar\";\n\nexport default function Repair({ match }) {\n  const usedParts = [\n    { id: 1604, name: \"iPhone Xs LCD display\", cost: 41.28 },\n    { id: 103, name: \"iPhone Xs back glass\", cost: 7.98 },\n    { id: 340, name: \"iPhone Xs battery\", cost: 22.05 },\n  ];\n\n  const [repairStatus, setRepairStatus] = useState(\"ongoing\");\n  const [parts, setParts] = useState(usedParts);\n  const [costOfLabour, setCostOfLabour] = useState(\"\");\n\n  const partsTable = parts.map((part) => {\n    return (\n      <div className=\"part-row\" key={part.id}>\n        <div>\n          <p className=\"part-name\">\n            <Link target=\"_blank\" to=\"/somepage\">\n              {part.name}\n            </Link>\n            <span\n              className=\"delete float-right\"\n              id={part.id}\n              onClick={(e) => {\n                setParts(\n                  parts.filter((aPart) => aPart.id !== parseInt(e.target.id))\n                );\n              }}\n            >\n              ×\n            </span>\n            <span className=\"float-right\">${part.cost}</span>\n          </p>\n        </div>\n        <div>\n          <p className=\"part-id\">ID: {part.id}</p>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <MenuBar />\n      <div className=\"container\">\n        <header>\n          <h4>\n            Repair #{match.params.id}{\" \"}\n            <span className={`status status-${repairStatus}`}>\n              {repairStatus}\n            </span>\n          </h4>\n          <h6>Joe Smith</h6>\n          <h6>Apple iPhone Xs</h6>\n          <h6>Started Jul. 6 2020</h6>\n        </header>\n        <hr></hr>\n        <div className=\"row\">\n          <div className=\"eight columns\">\n            <h5>Parts</h5>\n            {partsTable}\n            <Link to={`./${match.params.id}/selectpart`} className=\"button\">\n              Add part\n            </Link>\n          </div>\n        </div>\n        <hr></hr>\n        <div className=\"row\">\n          <div className=\"six columns\">\n            <h5>Notes</h5>\n            <textarea\n              className=\"u-full-width\"\n              placeholder=\"Enter some notes\"\n            ></textarea>\n          </div>\n        </div>\n        <hr></hr>\n        <div className=\"row\">\n          <div className=\"six columns\">\n            <h5>Cost of labour</h5>\n            <input\n              type=\"number\"\n              min=\"0\"\n              className=\"u-full-width\"\n              id=\"labourCost\"\n              placeholder=\"Enter cost of labour\"\n              value={costOfLabour}\n              onChange={(e) => setCostOfLabour(e.target.value)}\n            ></input>\n          </div>\n        </div>\n        <hr></hr>\n        <div className=\"row\">\n          <div className=\"twelve columns\">\n            <h5>\n              Total cost: $\n              {parts\n                .reduce(\n                  (total, part) => {\n                    return total + part.cost;\n                  },\n                  costOfLabour ? parseFloat(costOfLabour) : 0\n                )\n                .toFixed(2)}\n            </h5>\n            <button\n              className=\"button-primary\"\n              onClick={() => {\n                setRepairStatus(\"completed\");\n              }}\n            >\n              Complete repair\n            </button>\n            <p>\n              {repairStatus === \"ongoing\"\n                ? \"Customer will be alerted by email once the repair is completed\"\n                : \"Customer has been alerted\"}\n            </p>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function ButtonHeader({ title, buttonText, buttonLink }) {\n  return (\n    <div style={{ marginBottom: \"8rem\" }}>\n      <h4 style={{ display: \"inline-block\", marginBottom: 0 }}>{title}</h4>\n      <Link\n        style={{ float: \"right\" }}\n        to={buttonLink}\n        className=\"button button-primary\"\n      >\n        {buttonText}\n      </Link>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MenuBar from \"../components/MenuBar\";\nimport ButtonHeader from \"../components/ButtonHeader\";\nimport repairs from \"../repairs.json\";\n\nexport default function Repairs() {\n  const unsortedRepairs = Object.values(repairs);\n  const [sortedRepairs, setSortedRepairs] = useState(unsortedRepairs);\n\n  let sortedRepairsTable = sortedRepairs.map((sortedRepair) => {\n    return (\n      <div className=\"repair-row\">\n        <h5>\n          {sortedRepair.device}\n          <span className={`status status-${sortedRepair.status}`}>\n            {sortedRepair.status}\n          </span>\n        </h5>\n        <br /> #{sortedRepair.id}\n      </div>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <MenuBar />\n      <div className=\"container\">\n        <ButtonHeader\n          title=\"Repairs\"\n          buttonLink=\"/newrepair/customer\"\n          buttonText=\"New repair\"\n        />\n        <div className=\"row\">\n          <div className=\"twelve columns\">{sortedRepairsTable}</div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport deviceList from \"../deviceList.json\";\nimport Continue from \"../components/Continue\";\n\nexport default function SelectPart({ match }) {\n  const [manufacturer, setManufacturer] = useState(\"\");\n  const [modelId, setModelId] = useState(\"\");\n  const [partId, setPartId] = useState(\"\");\n\n  let filteredDevices = Object.values(deviceList)\n    .filter((myDevice) => myDevice.manufacturer === manufacturer)\n    .sort()\n    .map((aDevice) => (\n      <option\n        data-model={aDevice.model.toLowerCase().split(\" \").join(\"-\")}\n        key={aDevice.id}\n        value={aDevice.id}\n      >\n        {aDevice.model}\n      </option>\n    ));\n\n  let filteredDeviceParts = [\"part 1\", \"part 2\", \"part 3\", \"part 4\"].map(\n    (part) => (\n      <option key={part} value={part}>\n        {`device ID ${modelId}, ${part}`}\n      </option>\n    )\n  );\n\n  return (\n    <div className=\"container\">\n      <h4>Add a part to repair #{match.params.id}</h4>\n\n      <div className=\"row\">\n        <div className=\"six columns\">\n          <label htmlFor=\"manufacturer\">Manufacturer</label>\n          <select\n            className=\"u-full-width\"\n            id=\"manufacturer\"\n            onChange={(e) => {\n              setManufacturer(e.target.value);\n              setModelId(\"\");\n              setPartId(\"\");\n            }}\n            value={manufacturer}\n          >\n            <option value=\"\" disabled hidden>\n              Choose a manufacturer\n            </option>\n            <option value=\"apple\">Apple</option>\n            <option value=\"samsung\">Samsung</option>\n            <option value=\"lg\">LG</option>\n            <option value=\"motorola\">Motorola</option>\n            <option value=\"oneplus\">OnePlus</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"six columns\">\n          <label htmlFor=\"model\">Model</label>\n          <select\n            className=\"u-full-width\"\n            id=\"model\"\n            value={modelId}\n            {...(manufacturer === \"\" && { disabled: true })}\n            onChange={(e) => {\n              setModelId(e.target.value);\n              setPartId(\"\");\n            }}\n          >\n            <option value=\"\" disabled hidden>\n              Choose a model\n            </option>\n            {filteredDevices}\n          </select>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"six columns\">\n          <label htmlFor=\"model\">Part</label>\n          <select\n            className=\"u-full-width\"\n            id=\"model\"\n            value={partId}\n            {...(modelId === \"\" && { disabled: true })}\n            onChange={(e) => {\n              setPartId(e.target.value);\n            }}\n          >\n            <option value=\"\" disabled hidden>\n              Choose a part\n            </option>\n            {filteredDeviceParts}\n          </select>\n        </div>\n      </div>\n\n      <Continue\n        nextLink={`/repair/${match.params.id}`}\n        nextText=\"Continue\"\n        backText=\"back\"\n        backLink={`/repair/${match.params.id}`}\n        allowNext={partId ? true : false}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SelectDevice from \"./pages/SelectDevice\";\nimport SelectCustomer from \"./pages/SelectCustomer\";\nimport Home from \"./pages/Home\";\nimport Repair from \"./pages/Repair\";\nimport Repairs from \"./pages/Repairs\";\nimport SelectPart from \"./pages/SelectPart\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/repairs\" component={Repairs} />\n        <Route exact path=\"/newrepair/customer\" component={SelectCustomer} />\n        <Route exact path=\"/newrepair/device\" component={SelectDevice} />\n        <Route exact path=\"/repair/:id\" component={Repair} />\n        <Route exact path=\"/repair/:id/selectpart\" component={SelectPart} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}